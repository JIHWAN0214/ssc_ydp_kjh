.container {
    display: flex;
    gap: 20px;
}

.box {
    width: 200px;
    height: 100px;
    border-color: red;
    padding: 20px;
    border: 10px solid black;
    background-color: skyblue;
}

.content-box {
    box-sizing: content-box;
    /* width: 260px */
    /* height: 160px */
}

.border-box {
    box-sizing: border-box;
    /* width: 200px */
    /* height: 100px */
    /* 지정된 너비와 높이 내에서 패딩과 테투리를 포함하므로
    실제로 컨텐츠가 차지할 수 있는 공간이 작아짐 */
}

/* 두 박스의 장단점 
    1. content-box
    - 콘텐츠 유연성: 지정된 크기에 따라 동적으로 조정되므로 디자인의 유연성이 높다
    - 디자인 제어: 패딩, 테두리를 분리하여 디자인 요소를 더 정교하게 제어 가능
    - 단점: 레이아웃의 복잡성이 증가(다 각각 계산해야하므로 시간&노력 요구, 계산하다 오류발생할 비교적 확률이 높음)

    2. border-box
    - 예측가능성: 총 너비와 높이가 예측하기 쉽다.
    - 유지보수 용이 및 별도의 계산 필요 없음
    - 단점: 내용공간 감소(패딩과 테두리가 포함되기에 실제 콘텐츠 영역이 작아짐)
        
*/