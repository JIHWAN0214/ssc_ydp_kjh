.div1 {
    width: 100px;
    height: 100px;
    background-color: aquamarine;
}

/* 1. hover: 요소에 마우스를 올렸을때 
    -  : hover 형태로 작성
*/

.div1:hover {
    background-color: pink;
    width: 150px;
    height: 150px;
}

/* 2. : active - 요소를 마우스로 클릭 중일 때 */
.div1:active {
    background-color: brown;
    width: 200px;
}

/* 3. : focus - 요소에 포커스가 되었을 때 */
input:focus {
    background-color: crimson;
    color: lightblue;
    outline-color: yellowgreen;

}

.links > a:hover {
    background-color: coral;
}

.links > a:visited {
    color: red;
}

/* 요소 상황에 따른 가상 클래스 선택자  */
.zoo > * {
    background-color: green;
    color: white;
}

/* 
    1. 요소 : first-child => 요소가 첫번째 요소라면
*/
.zoo > *:first-child {
    background-color: red;
}

/* 
    2. 요소 : last-child => 요소가 마지막 번째라면
*/

.zoo > *:last-child {
    background-color: black;
}

/* 
    3. 요소: nth-child(n) => 요소가 n번째라면
 */

 .zoo > *:nth-child(2) {
    background-color: aqua;
 }

 /* 
    4. 요소: not(xyz) => xyz가 아닌 요소만 선택
 */

 .zoo > *:not(div) {
    background-color: pink;
 }

/* 가상 요소 선택자: before, after
 - HTML 문서의 특정 부분을 스타일링하기 위해 사용
 - 실제로 문서에 존재하지 않는 부분이지만 CSS를 통해 스타일 적용이 가능

    Q) 가상클래스의 ':' 와 '::'의 차이는?
    A) CSS 사양이 발전ㅇ하면서 가상클래스와 가상 요소를 명확하게 구분할 필요성 생김
    가상 클래스 - 문서의 기존 요소를 나타냄
    가상 요소 - 문서의 특정 부분을 생성하여 스타일링
    그렇기에 구분하기 위해서 :: 로 표기하는 표기법 새롭게 도입
    
*/